{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\suvek\\\\Desktop\\\\Qognition\\\\display_allergies_not_work - Copy\\\\client\\\\src\\\\components\\\\allergies\\\\AllergyItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteAllergy } from '../../actions/allergy';\n\nconst AllergyItem = ({\n  allergy: {\n    _id,\n    allergyName,\n    note,\n    date\n  }\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-2\",\n      children: [\"Allergy Recorded on \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Allergy Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: allergyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteAllergy(_id),\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AllergyItem;\nAllergyItem.propTypes = {\n  allergy: PropTypes.array.isRequired,\n  deleteAllergy: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteAllergy\n})(AllergytItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllergyItem\");","map":{"version":3,"sources":["C:/Users/suvek/Desktop/Qognition/display_allergies_not_work - Copy/client/src/components/allergies/AllergyItem.js"],"names":["React","PropTypes","connect","deleteAllergy","AllergyItem","allergy","_id","allergyName","note","date","showActions","propTypes","array","isRequired","func","bool","mapStateToProps","state","auth","AllergytItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GADO;AAEPC,IAAAA,WAFO;AAGPC,IAAAA,IAHO;AAIPC,IAAAA;AAJO;AADU,CAAD,KAOd;AACJ,sBACE;AAAA,4BACA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,yCAA0CA,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,+BACE;AAAA,kCACE;AAAA,sBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAiBGE,WAAW,iBACV,QAAC,QAAD;AAAA,6BACI;AACE,QAAA,OAAO,EAAE,MAAMP,aAAa,CAACG,GAAD,CAD9B;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAAA,+BAKE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAzCD;;KAAMF,W;AA2CNA,WAAW,CAACO,SAAZ,GAAwB;AACtBN,EAAAA,OAAO,EAAEJ,SAAS,CAACW,KAAV,CAAgBC,UADH;AAEtBV,EAAAA,aAAa,EAAEF,SAAS,CAACa,IAAV,CAAeD,UAFR;AAGtBH,EAAAA,WAAW,EAAET,SAAS,CAACc;AAHD,CAAxB;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADsB,CAAZ,CAAxB;;AAIA,eAAehB,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CACbgB,YADa,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteAllergy } from '../../actions/allergy';\r\n\r\nconst AllergyItem = ({\r\n  allergy: {\r\n    _id,\r\n    allergyName,\r\n    note,\r\n    date,\r\n  }\r\n}) => {\r\n  return (\r\n    <div >\r\n    <h2 className=\"my-2\">Allergy Recorded on {date}</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Allergy Name</th>\r\n            <th>Note</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{allergyName}</td>\r\n            <td>{note}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n            <button\r\n              onClick={() => deleteAllergy(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n        </Fragment>\r\n      )}\r\n\r\n    </div>  \r\n      \r\n  );\r\n};\r\n\r\nAllergyItem.propTypes = {\r\n  allergy: PropTypes.array.isRequired,\r\n  deleteAllergy: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteAllergy })(\r\n  AllergytItem\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}