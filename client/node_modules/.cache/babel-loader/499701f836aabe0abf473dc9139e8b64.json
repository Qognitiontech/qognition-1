{"ast":null,"code":"import { GET_ALLERGIES, ALLERGY_ERROR, DELETE_ALLERGY, ADD_ALLERGY, GET_ALLERGY } from '../actions/types';\nconst initialState = {\n  allergies: [],\n  allergy: [],\n  loading: true,\n  error: {}\n};\n\nfunction allergyReducer(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_ALLERGIES:\n      return { ...state,\n        allergies: payload,\n        loading: false\n      };\n\n    case GET_ALLERGY:\n      return { ...state,\n        allergy: payload,\n        loading: false\n      };\n\n    case ADD_ALLERGY:\n      return { ...state,\n        allergies: [payload, ...state.allergies],\n        loading: false\n      };\n\n    case DELETE_ALLERGY:\n      return { ...state,\n        allergies: state.allergies.filter(allergy => allergy._id !== payload),\n        loading: false\n      };\n\n    case ALLERGY_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default allergyReducer;","map":{"version":3,"sources":["C:/Users/praba/OneDrive/Desktop/display_allergies_not_work/client/src/reducers/allergy.js"],"names":["GET_ALLERGIES","ALLERGY_ERROR","DELETE_ALLERGY","ADD_ALLERGY","GET_ALLERGY","initialState","allergies","allergy","loading","error","allergyReducer","state","action","type","payload","filter","_id"],"mappings":"AAAA,SACIA,aADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,WALJ,QAMS,kBANT;AAQE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,SAASC,cAAT,CAAwBC,KAAK,GAAGN,YAAhC,EAA8CO,MAA9C,EAAsD;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKb,aAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,SAAS,EAAEQ,OAFN;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,OAAO,EAAEO,OAFJ;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,SAAS,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,SAAnB,CAFN;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,SAAS,EAAEK,KAAK,CAACL,SAAN,CAAgBS,MAAhB,CAAwBR,OAAD,IAAaA,OAAO,CAACS,GAAR,KAAgBF,OAApD,CAFN;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,KAAK,EAAEK,OAFF;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOG,KAAP;AAhCJ;AAkCD;;AAED,eAAeD,cAAf","sourcesContent":["import {\r\n    GET_ALLERGIES,\r\n    ALLERGY_ERROR,\r\n    DELETE_ALLERGY,\r\n    ADD_ALLERGY,\r\n    GET_ALLERGY,\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    allergies: [],\r\n    allergy: [],\r\n    loading: true,\r\n    error: {}\r\n  };\r\n  \r\n  function allergyReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case GET_ALLERGIES:\r\n        return {\r\n          ...state,\r\n          allergies: payload,\r\n          loading: false\r\n        };\r\n      case GET_ALLERGY:\r\n        return {\r\n          ...state,\r\n          allergy: payload,\r\n          loading: false\r\n        };\r\n      case ADD_ALLERGY:\r\n        return {\r\n          ...state,\r\n          allergies: [payload, ...state.allergies],\r\n          loading: false\r\n        };\r\n      case DELETE_ALLERGY:\r\n        return {\r\n          ...state,\r\n          allergies: state.allergies.filter((allergy) => allergy._id !== payload),\r\n          loading: false\r\n        };\r\n      case ALLERGY_ERROR:\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          loading: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default allergyReducer;\r\n  "]},"metadata":{},"sourceType":"module"}