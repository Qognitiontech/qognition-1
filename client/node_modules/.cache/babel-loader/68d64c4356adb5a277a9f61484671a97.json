{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\praba\\\\OneDrive\\\\Desktop\\\\qognition-main\\\\client\\\\src\\\\components\\\\immunize\\\\Immunize.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ImmunizeItem from './ImmunizeItem';\nimport ImmunizeForm from './ImmunizeForm';\nimport { getImmunizes } from '../../actions/immunize';\n\nconst Immunizes = ({\n  getImmunizes,\n  immunize: {\n    immunizes\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getImmunizes();\n  }, [getImmunizes]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), \" post check\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImmunizeForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Immunizes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Immunizes;\nImmunizes.propTypes = {\n  getImmunizes: PropTypes.func.isRequired,\n  immunize: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  immunize: state.immunize\n});\n\nexport default connect(mapStateToProps, {\n  getImmunizes\n})(Immunizes);\n\nvar _c;\n\n$RefreshReg$(_c, \"Immunizes\");","map":{"version":3,"sources":["C:/Users/praba/OneDrive/Desktop/qognition-main/client/src/components/immunize/Immunize.js"],"names":["React","Fragment","useEffect","PropTypes","connect","ImmunizeItem","ImmunizeForm","getImmunizes","Immunizes","immunize","immunizes","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,YAAF;AAAgBE,EAAAA,QAAQ,EAAE;AAAEC,IAAAA;AAAF;AAA1B,CAAD,KAA+C;AAAA;;AAC/DR,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnBD;;GAAMC,S;;KAAAA,S;AAqBNA,SAAS,CAACG,SAAV,GAAsB;AACpBJ,EAAAA,YAAY,EAAEJ,SAAS,CAACS,IAAV,CAAeC,UADT;AAEpBJ,EAAAA,QAAQ,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAFP,CAAtB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,QAAQ,EAAEO,KAAK,CAACP;AADkB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAER,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,SAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ImmunizeItem from './ImmunizeItem';\r\nimport ImmunizeForm from './ImmunizeForm';\r\nimport { getImmunizes } from '../../actions/immunize';\r\n\r\nconst Immunizes = ({ getImmunizes, immunize: { immunizes } }) => {\r\n  useEffect(() => {\r\n    getImmunizes();\r\n  }, [getImmunizes]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> post check\r\n      </p>\r\n      <ImmunizeForm />\r\n      {/* <div className=\"posts\">\r\n        {immunizes.map((immunize) => (\r\n          <ImmunizeItem key={immunize._id} post={immunize} />\r\n        ))}\r\n      </div> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nImmunizes.propTypes = {\r\n  getImmunizes: PropTypes.func.isRequired,\r\n  immunize: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  immunize: state.immunize\r\n});\r\n\r\nexport default connect(mapStateToProps, { getImmunizes })(Immunizes);\r\n"]},"metadata":{},"sourceType":"module"}