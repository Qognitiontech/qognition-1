{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\praba\\\\Downloads\\\\display_allergies_worked(1)\\\\display_allergies_worked\\\\client\\\\src\\\\components\\\\allergies\\\\Allergies.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AllergyForm from './AllergyForm';\nimport AllergyItem from './AllergyItem';\nimport { getAllergies } from '../../actions/allergy';\n\nconst Allergy = ({\n  getAllergies,\n  allergy: {\n    allergies\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getAllergies();\n  }, [getAllergies]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Allergies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(AllergyForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-grid my-1\",\n      children: allergies.map(allergy => /*#__PURE__*/_jsxDEV(AllergyItem, {\n        allergy: allergy\n      }, allergy._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Allergy, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Allergy;\nAllergy.propTypes = {\n  getAllergies: PropTypes.func.isRequired,\n  allergy: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  allergy: state.allergy,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getAllergies\n})(Allergy);\n\nvar _c;\n\n$RefreshReg$(_c, \"Allergy\");","map":{"version":3,"sources":["C:/Users/praba/Downloads/display_allergies_worked(1)/display_allergies_worked/client/src/components/allergies/Allergies.js"],"names":["React","Fragment","useEffect","PropTypes","connect","AllergyForm","AllergyItem","getAllergies","Allergy","allergy","allergies","map","_id","propTypes","func","isRequired","object","auth","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAED,EAAAA,YAAF;AAAgBE,EAAAA,OAAO,EAAE;AAACC,IAAAA;AAAD;AAAzB,CAAD,KAA4C;AAAA;;AAC1DR,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,4BACG;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACCG,SAAS,CAACC,GAAV,CAAeF,OAAD,iBACX,QAAC,WAAD;AAAgC,QAAA,OAAO,EAAEA;AAAzC,SAAmBA,OAAO,CAACG,GAA3B;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD,CAlBD;;GAAMJ,O;;KAAAA,O;AAoBNA,OAAO,CAACK,SAAR,GAAoB;AAClBN,EAAAA,YAAY,EAAEJ,SAAS,CAACW,IAAV,CAAeC,UADX;AAElBN,EAAAA,OAAO,EAAEN,SAAS,CAACa,MAAV,CAAiBD,UAFR;AAGlBE,EAAAA,IAAI,EAAEd,SAAS,CAACa,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,OAAO,EAAEU,KAAK,CAACV,OADmB;AAElCQ,EAAAA,IAAI,EAAEE,KAAK,CAACF;AAFsB,CAAZ,CAAxB;;AAKA,eAAeb,OAAO,CAACc,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,OAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport AllergyForm from './AllergyForm';\r\nimport AllergyItem from './AllergyItem';\r\nimport { getAllergies } from '../../actions/allergy';\r\n\r\nconst Allergy = ({ getAllergies, allergy: {allergies }}) => {\r\n  useEffect(() => {\r\n    getAllergies();\r\n  }, [getAllergies]);\r\n\r\n  return (\r\n      <Fragment>\r\n         <h1 className=\"large text-primary\">Allergies</h1>\r\n        <AllergyForm />\r\n      <div className=\"profile-grid my-1\">\r\n      {allergies.map((allergy) => (\r\n          <AllergyItem  key={allergy._id} allergy={allergy} />\r\n        ))}\r\n            {/* <div className=\"profile-exp bg-white p-2\">\r\n            </div> */}\r\n          </div>\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nAllergy.propTypes = {\r\n  getAllergies: PropTypes.func.isRequired,\r\n  allergy: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allergy: state.allergy,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllergies })(Allergy);\r\n\r\n"]},"metadata":{},"sourceType":"module"}