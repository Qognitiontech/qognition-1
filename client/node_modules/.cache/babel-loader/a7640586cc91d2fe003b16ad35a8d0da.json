{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\praba\\\\Downloads\\\\display_allergies_worked(1)\\\\display_allergies_worked\\\\client\\\\src\\\\components\\\\allergies\\\\AllergyForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addAllergy } from '../../actions/allergy';\n\nconst AllergyForm = ({\n  addAllergy\n}) => {\n  _s();\n\n  const [allergyName, setAllergyName] = useState('');\n  const [allergyCategory, setAllergyCategory] = useState('');\n  const [critical, setCritical] = useState('');\n  const [encounterDate, setEncounterDate] = useState('');\n  const [encounterAge, setEncounterAge] = useState('');\n  const [lastOccurence, setLastOccurence] = useState('');\n  const [reaction, setReaction] = useState('');\n  const [cure, setCure] = useState('');\n  const [exposureRoute, setExposureRoute] = useState('');\n  const [note, setNote] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form my-1\",\n      onSubmit: e => {\n        e.preventDefault();\n        addAllergy({\n          allergyName,\n          note\n        });\n        setAllergyName('');\n        setNote('');\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"allergyName\",\n        placeholder: \"Allergy Name\",\n        value: allergyName,\n        onChange: e => setAllergyName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"allergyCategory\",\n        placeholder: \"Allergy Category\",\n        value: allergyCategory,\n        onChange: e => setAllergyCategory(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"note\",\n        placeholder: \"Note\",\n        value: note,\n        onChange: e => setNote(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-dark my-1\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllergyForm, \"qAM4HaJc2LkDKgYt7EA+3H4pCMg=\");\n\n_c = AllergyForm;\nAllergyForm.propTypes = {\n  addAllergy: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addAllergy\n})(AllergyForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllergyForm\");","map":{"version":3,"sources":["C:/Users/praba/Downloads/display_allergies_worked(1)/display_allergies_worked/client/src/components/allergies/AllergyForm.js"],"names":["React","useState","PropTypes","connect","addAllergy","AllergyForm","allergyName","setAllergyName","allergyCategory","setAllergyCategory","critical","setCritical","encounterDate","setEncounterDate","encounterAge","setEncounterAge","lastOccurence","setLastOccurence","reaction","setReaction","cure","setCure","exposureRoute","setExposureRoute","note","setNote","e","preventDefault","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addAllergy } from '../../actions/allergy';\r\n\r\nconst AllergyForm = ({ addAllergy }) => {\r\n  const [allergyName, setAllergyName] = useState('');\r\n  const [allergyCategory, setAllergyCategory] = useState('');\r\n  const [critical, setCritical] = useState('');\r\n  const [encounterDate, setEncounterDate] = useState('');\r\n  const [encounterAge, setEncounterAge] = useState('');\r\n  const [lastOccurence, setLastOccurence] = useState('');\r\n  const [reaction, setReaction] = useState('');\r\n  const [cure, setCure] = useState('');\r\n  const [exposureRoute, setExposureRoute] = useState('');\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addAllergy({ allergyName, note});\r\n          setAllergyName('');\r\n          setNote('');\r\n          \r\n        }}\r\n      >\r\n        <input\r\n          name='allergyName'\r\n          placeholder='Allergy Name'\r\n          value={allergyName}\r\n          onChange={e => setAllergyName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          name='allergyCategory'\r\n          placeholder='Allergy Category'\r\n          value={allergyCategory}\r\n          onChange={e => setAllergyCategory(e.target.value)}\r\n          required\r\n        />\r\n        <br></br>\r\n        <input\r\n          name='note'\r\n          placeholder='Note'\r\n          value={note}\r\n          onChange={e => setNote(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAllergyForm.propTypes = {\r\n    addAllergy: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addAllergy }\r\n)(AllergyForm);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}