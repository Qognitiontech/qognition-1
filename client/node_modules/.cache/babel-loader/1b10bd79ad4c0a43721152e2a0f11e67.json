{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\praba\\\\OneDrive\\\\Desktop\\\\qognition-main\\\\client\\\\src\\\\components\\\\immunize\\\\Immunize.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // import PostItem from '../posts/PostItem';\n\nimport ImmunizeItem from '../immunize/ImmunizeItem';\nimport ImmunizeForm from '../immunize/ImmunizeForm';\nimport { getImmunizes } from '../../actions/immunize';\n\nconst Immunizes = ({\n  getImmunizes,\n  post: {\n    posts\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getImmunizes();\n  }, [getImmunizes]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ImmunizeForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(ImmunizeItem, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Immunizes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Immunizes;\nImmunizes.propTypes = {\n  getImmunizes: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getImmunizes\n})(Immunizes);\n\nvar _c;\n\n$RefreshReg$(_c, \"Immunizes\");","map":{"version":3,"sources":["C:/Users/praba/OneDrive/Desktop/qognition-main/client/src/components/immunize/Immunize.js"],"names":["React","Fragment","useEffect","PropTypes","connect","ImmunizeItem","ImmunizeForm","getImmunizes","Immunizes","post","posts","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,YAAF;AAAgBE,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAtB,CAAD,KAAuC;AAAA;;AACvDR,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGG,KAAK,CAACC,GAAN,CAAWF,IAAD,iBACT,QAAC,YAAD;AAA6B,QAAA,IAAI,EAAEA;AAAnC,SAAmBA,IAAI,CAACG,GAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAfD;;GAAMJ,S;;KAAAA,S;AAiBNA,SAAS,CAACK,SAAV,GAAsB;AACpBN,EAAAA,YAAY,EAAEJ,SAAS,CAACW,IAAV,CAAeC,UADT;AAEpBN,EAAAA,IAAI,EAAEN,SAAS,CAACa,MAAV,CAAiBD;AAFH,CAAtB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,SAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// import PostItem from '../posts/PostItem';\r\n\r\nimport ImmunizeItem from '../immunize/ImmunizeItem';\r\nimport ImmunizeForm from '../immunize/ImmunizeForm';\r\nimport { getImmunizes } from '../../actions/immunize';\r\n\r\nconst Immunizes = ({ getImmunizes, post: { posts } }) => {\r\n  useEffect(() => {\r\n    getImmunizes();\r\n  }, [getImmunizes]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ImmunizeForm />\r\n      <div className=\"posts\">\r\n        {posts.map((post) => (\r\n          <ImmunizeItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nImmunizes.propTypes = {\r\n  getImmunizes: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getImmunizes })(Immunizes);\r\n"]},"metadata":{},"sourceType":"module"}