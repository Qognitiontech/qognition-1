{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\praba\\\\OneDrive\\\\Desktop\\\\wd qognition\\\\client\\\\src\\\\components\\\\allergies\\\\AllergyItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport formatDate from '../../utils/formatDate';\nimport { connect } from 'react-redux';\nimport { deleteAllergy } from '../../actions/allergy';\n\nconst AllergyItem = ({\n  deleteAllergy,\n  auth,\n  allergy: {\n    _id,\n    allergyName,\n    user,\n    note,\n    date\n  },\n  showActions\n}) => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n\n_c = AllergyItem;\nAllergyItem.defaultProps = {\n  showActions: true\n};\nAllergyItem.propTypes = {\n  allergy: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteAllergy: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteAllergy\n})(AllergyItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllergyItem\");","map":{"version":3,"sources":["C:/Users/praba/OneDrive/Desktop/wd qognition/client/src/components/allergies/AllergyItem.js"],"names":["React","Fragment","PropTypes","formatDate","connect","deleteAllergy","AllergyItem","auth","allergy","_id","allergyName","user","note","date","showActions","defaultProps","propTypes","object","isRequired","func","bool","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBD,EAAAA,aADmB;AAEnBE,EAAAA,IAFmB;AAGnBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA,IAApB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA;AAA/B,GAHU;AAInBC,EAAAA;AAJmB,CAAD,kBAMlB;AAAA;AAAA;AAAA;AAAA,QANF;;KAAMR,W;AAuCNA,WAAW,CAACS,YAAZ,GAA2B;AACzBD,EAAAA,WAAW,EAAE;AADY,CAA3B;AAIAR,WAAW,CAACU,SAAZ,GAAwB;AACtBR,EAAAA,OAAO,EAAEN,SAAS,CAACe,MAAV,CAAiBC,UADJ;AAEtBX,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAAV,CAAiBC,UAFD;AAGtBb,EAAAA,aAAa,EAAEH,SAAS,CAACiB,IAAV,CAAeD,UAHR;AAItBJ,EAAAA,WAAW,EAAEZ,SAAS,CAACkB;AAJD,CAAxB;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCf,EAAAA,IAAI,EAAEe,KAAK,CAACf;AADsB,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CACbC,WADa,CAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport formatDate from '../../utils/formatDate';\r\nimport { connect } from 'react-redux';\r\nimport { deleteAllergy } from '../../actions/allergy';\r\n\r\nconst AllergyItem = ({\r\n  deleteAllergy,\r\n  auth,\r\n  allergy: { _id, allergyName, user,note, date },\r\n  showActions\r\n}) => (\r\n  <div> \r\n    {/* <div>\r\n    <h2 class=\"my-2\">Allergies Recorded on {formatDate(date)}</h2>\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Allergy Name</th>\r\n            <th>Note</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{allergyName}</td>\r\n            <td>{note}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n            <button\r\n              onClick={() => deleteAllergy(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n        </Fragment>\r\n      )}\r\n    </div> */}\r\n  </div>\r\n);\r\n\r\nAllergyItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nAllergyItem.propTypes = {\r\n  allergy: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteAllergy: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteAllergy })(\r\n  AllergyItem\r\n);\r\n"]},"metadata":{},"sourceType":"module"}